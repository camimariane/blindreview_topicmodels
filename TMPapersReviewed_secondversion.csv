Authors,Title,Year,Venue,Topic model,Supported task,Details of the supported task,Type of data,Document,Length of document,"Where ""length"" is mentioned",Parameter k,Parameter alpha,Parameter beta,Other parameters,Resolving negations,Correcting typos,Expanding contractions,Resolving synonyms,Splitting sentences or a document into n documents,Lemmatizing,Identifying n-grams,Lowercasing,Tokenizing,Splitting words,Stemming,Removing empty documents,Removing long paragraphs,Removing short documents,Removing extra white space,Removing non-informative content,"Removing words shorter than four, three or two letters",Removing least frequent terms,Removing most frequent terms,Removing code snippets,Removing HTML tags,Removing programming language keywords,Removing symbols and special characters,Removing punctuation,Removing stop words,Remove URL,Remove numbers,Topic naming approach,Topic naming procedure,Type of contribution,Other techniques combined,Outcome detail
"Asuncion, H U; Asuncion, A U; Taylor, R N",Software Traceability with Topic Modeling,2010,ICSE,LDA,Documentation,Documentation [artifacts labelling],Source code; Developer communication; Issue/bug report and End user documentation,Text containing a software artifact (tutorials in PDF; presentations in PowerPoint; project specifications in Word; archived emails in an online mailing list; Wiki pages and bug reports in Trac; ArchStudio web pages; research publications in PDF; and developer notes in various file formats),,,"{10, 20, 30}",,,,,,,,1,,,,,,1,,,,,,,,,,,,,,1,,,,,Approach,,Tool (Topically-Rich Artifact Search Engine - TRASE)
"Jiang, H; Zhang, J; Ren, Z; Zhang, T",An Unsupervised Approach for Discovering Relevant Tutorial Fragments for APIs,2017,ICSE,LDA,Documentation,Documentation [extraction/augmenting],End user documentation,Text containing a tutorial fragment,100 to 300 words,Mention on study design - dataset description,,0.1,0.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Technique (FRAPT)
"Panichella, A; Dit, B; Oliveto, R; Di Penta, M; Poshynanyk, D; De Lucia, A",How to Effectively Use Topic Models for Software Engineering Tasks? An Approach Based on Genetic Algorithms,2013,ICSE,LDA-GA,Documentation,Documentation [traceability to source code],Source code and Developer documentation,Text with (a) use case; (b) a classe; (c) a method; (d) a feature description,,,"{10, 20, 30, 40, 50}",{0-1 by 0.1},{0-1 by 0.1},i = 500,,,,,,,,,,,,,,,,,,,,,,,,,,,,Automated,Most frequent words in word clusters,Approach,,Technique
"Galvis Carreno, L V;  Winbladh, K",Analysis of User Comments: An Approach for Software Requirements Evolution,2013,ICSE,ASUM,Requirements,Requirements evolution,End user communication,Text of a comment posted as app review,,,"(1) {33, 66, 150}; (2) {24, 48, 150}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Manual,Most frequent words in word clusters,Approach,,Technique
"Chen, N; Lin, J; Hoi, S C H; Xiao, X; Zhang, B",AR-miner: Mining Informative Reviews for Developers from Mobile App Marketplace,2014,ICSE,LDA; ASUM,Bug handling,Localization [concerns],End user communication,Text with a user review,,,22,0.01,0.6,"wG = {0.85, 0, 0.15}; wI = {0.2, 0.2, 0.2, 0.2, 0.2}",,,,,,,,1,1,,1,1,,,1,,,1,,,,,1,,1,,,,,Approach; Comparison,,Framework (AR-Miner)
"Henß, S; Monperrus, M; Mezini, M",Semi-automatically extracting FAQs to improve accessibility of software development knowledge,2012,ICSE,LDA (GS),Documentation,Documentation [extraction/augmenting],Developer communication,Text with an entire conversation thread,,,,50/k,0.01,,,,,,,,,,,,,,1,,,,,,,,,,,,1,,,,,Approach,,Semi-automatic aproach
"Chatterjee, P; Damevski, K; Pollock, L;  Augustine, V; Kraft, N A",Exploratory Study of Slack Q&A Chats as a Mining Source for Software Engineering Tools,2019,MSR,LDA,Exploratory study,Exploring information needs in developer communication,Developer communication,Text of a Stack Overflow post (SO corpus); Text containing a Slack conversation thread (S corpus),,Mention on study design - evaluation of technique,20,,,,,,,,,,,,,,,,,,,,,1,1,1,,,,,,1,,,,Exploration,,"""We found that Q&A chats provide, in lesser quantities, the same information as can be found in Q&A posts on Stack Overflow. However, Q&A chats generally provide more information on API mentions than do Q&A posts"""
"Bajaj, K; Pattabiraman, K; Mesbah, A",Mining Questions Asked by Web Developers,2014,MSR,LDA,Exploratory study,Exploring information needs in developer communication,Developer communication,Text with several Stack Overflow posts,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,1,,,Manual,Authors' deduction based on word clusters,Exploration,,"""(1) the overall share of web development related discussions is increasing among developers, (2) browser related discussions are prevalent; however, this share is decreasing with time, (3) form validation and other DOM related discussions have been discussed consistently over time, (4) web related discussions are becoming more prevalent in mobile development, and (5) developers face implementation issues with new HTML5 features such as Canvas."""
"Layman, L; Nikora, A P;  Meek, J; Menzies, T",Topic Modeling of NASA Space System Problem Reports: Research in Practice,2016,MSR,LDA,Exploratory study,Exploring lessons learned in historical data,Issue/bug report,Text of a problem (bug) report,All missions had an average of 404 words per document,Mention on study design - dataset description,"{20, 30, 40, ..., 100, 125, 150, ..., 225}",50/k,0.01,,,,,,,,,1,,,1,,,,,,1,,,,,,,1,1,,1,Manual,Authors' deduction based on word clusters,Exploration,,"""We identify a number of challenges in topic modeling for trend analysis: 1) that the process of selecting the topic modeling parameters lacks definitive guidance, 2) defining semantically-meaningful topic labels requires nontrivial effort and domain expertise, 3) topic models derived from the combined corpus of the six missions were biased toward the larger missions, and 4) topics must be semantically distinct as well as cohesive to be useful."""
"Hu, W; Wong, K",Using citation influence to predict software defects,2013,MSR,CITM,Bug handling,Prediction [defects],Source code and Commit messages,(1) Text with several comments from source code of a certain release; (2) Text with several comments from commits of a certain release,,,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Technique
"Naguib, H; Narayan, N; Brugge, B; Helal, D",Bug report assignee recommendation using activity profiles,2013,MSR,LDA (GS); Support Vector Machines (SVM) [classification algorithm],Bug handling,Bug-fix assignment,Issue/bug report,Text with a bug report (title; description and system component information),,,10,50/k,0.01,,,,,,,1,,,1,,,,,,,,,,,,1,,,,1,,1,,,Approach; Comparison,,Technique
"Moslehi, P; Adams, B; Rilling, J",Feature Location Using Crowd-Based Screencasts,2018,MSR,LDA (GS),Documentation,Localization [features],Transcript text from speech,Text containing GUI and/or speech information,,Mention on limitations of study,80,50/k,0.01,,,,,,,,,,,,1,,,,,,,,,,,,1,1,1,,1,,,Approach,,Technique
"Moslehi, P; Adams, B; Rilling, J",On Mining Crowd-Based Speech Documentation,2016,MSR,LDA (GS),Documentation,Documentation [extraction/augmenting],Transcript text from speech,Text containing a screencast transcript,Screencast length: 1 to 10 minutes,Mention on results of study,20,50/k,0.01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Automatic Technique
"Martin, W; Harman, M; Jia, Y; Sarro, F; Zhang, Y",The App Sampling Problem for App Store Mining,2015,MSR,LDA (GS),Bug handling,Localization [concerns],End user communication,Text containing a user review or an app description,,,100,50/k,0.01,,,,,,,1,,1,,,,,,,,,,,,,,,,,1,,,Manual,Predetermined labels,Exploration,,"""We show that by appropriate data reduction of user reviews to a subset of user requests, we can learn important results through correlation analysis. For example, we find a strong inverse linear correlation between the prevalence of topics in apps and user requests."""
"Bajracharya, S K; Lopes, C V",Mining search topics from a code search engine usage log,2009,MSR,LDA,Exploratory study,Exploring information needs in developer communication,Search query,Text with a collection of queries made by a user,,,50,0.5,0.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Exploration,,"""This paper presents a general categorization of these topics that provides insights on the different ways code search engine users express their queries. The findings support the conclusion that existing code search engines provide only a subset of the various information needs of the users when compared to the categories of queries they look at."""
"Nguyen, A T; Nguyen, T T; Nguyen, T N; Lo, D; and Sun; C",Duplicate Bug Report Detection with a Combination of Information Retrieval and Topic Modeling,2012,ASE,LDA,Bug handling,Detection of duplicates [bugs],Issue/bug report,Text with a bug report; which has a description and summary,,Mention on study design - technique description,{100-320},50/k,0.01,,,,,,,,,,,,1,,,,,,,1,,,,,,,1,,,,,Approach,Information extraction technique,Technique (Duplicate Bug report Topic Model - DBTM)
"Nguyen, A T; Nguyen, T T; Al-Kofahi, J; Nguyen, H V; Nguyen, T N",A Topic-based Approach for Narrowing the Search Space of Buggy Files from a Bug Report,2011,ASE,BugScout,Bug handling,Localization [concerns],Source code,Text containing  a source code file (comments; names and identifiers),,,300,0.01,0.01,,,,,,,,,,,,1,,,,,,,,1,,,,,,1,,,,,Approach,,Tool (BugScout)
"Bagherzadeh, M; Khatchadourian, R",Going Big: A Large-scale Study on What Big Data Developers Ask,2019,ESEC FSE,LDA (GS),Exploratory study,Exploring information needs in developer communication,Developer communication,Text containing a Stack Overflow post about big data,,,30,50/k,0.01,i = 1000,,,,,,,,,,,1,,,,,,,,,1,1,,1,1,1,,1,Manual,Authors' deduction based on word clusters,Exploration,,"""To conduct the study, we develop a set of big data tags to extract big data posts from Stackoverflow; use topic modeling to group these posts into big data topics; group similar topics into categories to construct a topic hierarchy; analyze popularity and difficulty of topics and their correlations; and discuss implications of our findings for practice, research and education of big data software development and investigate their coincidence with the findings of previous work"""
"Murali, V; Chaudhuri, S; Jermaine, C",Bayesian Specification Learning for Finding API Usage Errors,2017,ESEC FSE,LDA (GS),Bug handling,Detection of duplicates [bugs],End user documentation,Text containing an app description (set of features),,,15,0.1,,eta = 1/|Σ|,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach; Comparison,Probabilistic Behavior Model; Artificial Neural Networks,Framework (Salento)
"Ahmed, S; Bagherzadeh, M",What Do Concurrency Developers Ask About?: A Large-scale Study Using Stack Overflow,2018,ESEM,LDA (GS),Exploratory study,Exploring information needs in developer communication,Developer communication,Text containing a Stack Overflow post - tagged as concurrent,,,30,50/k,0.01,i = 1000,,,,,,,,,,,1,,,,,,,,,1,1,,1,1,1,1,1,Manual,Authors' deduction based on word clusters,Exploration,,"""(1) Developers ask questions about a broad spectrum of concurrency topics ranging from multithreading to parallel computing, mobile concurrency to web concurrency and memory consistency to runtime speedup. (2) These questions can be grouped into a hierarchy with eight major categories: concurrency models, programming paradigms, correctness, debugging, basic concepts, persistence, performance and GUI. (3) Developers ask more about correctness of their concurrent programs than performance. (4) Concurrency questions about thread safety and database management systems are among the most popular and the most difficult, respectively. (5) Difficulty and popularity of concurrency topics are negatively correlated."""
"Xia, X; Lo, D; Ding, Y; Al-Kofahi, J M; Nguyen, T N; Wang, X",Improving Automated Bug Triaging with Specialized Topic Model,2017,TSE,MTM,Bug handling,Triaging/characterization [bugs],Issue/bug report,Text with a bug report (bug ID; bug fixer; summary text; description text; product and component),,Mention on study design - technique description,k to be 1-15 percent of the number of distinct terms in a training dataset,50/k,0.01,i = 500,,,,,,,,,1,,1,,,,,,,1,,,,,,,1,,,,,Approach; Comparison,,Technique (MTM + TopicMiner)
"Bavota, G; Oliveto, R; Gethers, M; Poshyvanyk, D; De Lucia, A",Methodbook: Recommending move method refactorings via relational topic models,2014,TSE,RTM,Refactoring,Refactoring,Source code,Text with comments posted on source code; Text with several methods of a software,,Mention on study design - evaluation of technique,75,0.1,1,eta = 1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Technique; Cookbook
"Damevski, K; Chen, H; Shepherd, D C; Kraft, N A; Pollock, L",Predicting Future Developer Behavior in the IDE Using Topic Models,2018,TSE,LDA,Coding,Prediction [developer behavior],Log information,Text with 25 interaction events (e.g.; most clicks) and commands executed over a contiguous time interval,,,50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Technique
"B. Dit, M. Revelle, and D. Poshyvanyk","Integrating information retrieval, execution and link analysis algorithms to improve feature location in software",2013,EMSE,LSI,Documentation,Localization [features],Source code and Search query,Text with several methods of a software; Text with a collection of search queries used in software repository,,,,,,,,,,,,,,,,1,1,,,,,,,,,,,1,,,,,,,,Approach,,Technique
"Hindle, A; Ernst, N A; Godfrey, M W; Mylopoulos, J",Automated topic naming: supporting cross-project analysis of software maintenance activities,2013,EMSE,LDA,Documentation,Documentation [artifacts labelling],Commit messages,Text with commit comments posted in a 30-day period,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,1,,,,Mixed,Predetermined labels,Approach,Classification (multi-label),Semi-automatic Technique
"Xia, X; Bao, L; Lo, D; Kochhar, P S; Hassan, A E; Xing, Z",What do developers search for on the web?,2017,EMSE,LDA,Exploratory study,Exploring information needs in developer communication,Search query,"Text with a search query (i.e.; ""how to use git"")",,,50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Exploration,,"""We find that searching for explanations for unknown terminologies, explanations for exceptions/error messages (e.g., HTTP 404), reusable code snippets, solutions to common programming bugs, and suitable third-party libraries/services are the most frequent search tasks that developers perform, while searching for solutions to performance bugs, solutions to multi-threading bugs, public datasets to test newly developed algorithms or systems, reusable code snippets, best industrial practices, database optimization solutions, solutions to security bugs, and solutions to software configuration bugs are the most difficult search tasks that developers consider."""
"Pagano, D; Maalej, W",How do open source communities blog?,2013,EMSE,LDA,Exploratory study,Exploring information needs in developer communication,Developer communication,Text containing a blog post,"Average of 273 words. ""Over 95% of all posts are shorter than 1,000 words, which corresponds to four printed pages""",Mention on study design - dataset description,50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Manual,Authors' deduction based on word clusters,Exploration,Sequential pattern mining,"""First, it gives empirical evidence on what a developer’s blog post typically looks like. Second, it explores usage patterns of blogs during development and identifies dependencies to other activities: in particular committing code and releasing software. Third, it gives first insights to tool vendors and practitioners into how to better integrate social media into development tools and processes."""
"Canfora, G; Cerulo, L; Cimitile, M; Di Penta, M",How changes affect software entropy: an empirical study,2014,EMSE,LDA,Refactoring,Refactoring,Commit messages,Text with a commit comment,Median of 9 to 20 words considering all projects,Mention on results of study,10,,,,,,,,,,,,,,1,,,,,,,,,,,1,1,,1,,,,,Exploration,,"""Results show that (i) as expected, refactorings mitigate the change entropy, i.e., changes occurring on a file after it underwent a refactoring exhibit a lower change entropy than changes occurring before the refactoring; (ii) files modified by a higher number of developers exhibit a higher change entropy; (iii) classes participating in certain design patterns, exhibit a lower change entropy than others, though this depends on the context in which the design pattern is used in a given system; and (iv) different kinds of changes exhibit different change entropy."""
"Noei, E; Zhang, F; Wang, S; Zou, Y",Towards prioritizing user-related issue reports of mobile applications,2019,EMSE,LDA,Bug handling,Prioritization [bugs],End user communication,Text with a user review,,Mention on study design - evaluation of technique,,,,,1,1,,1,,,1,,,,1,,,,,1,,,,,,,,,1,,,Manual,Authors' deduction based on word clusters,Approach,,Technique
"Ahasanuzzaman, M; Asaduzzaman, M; Roy, C K; Schneider, K A",CAPS: a supervised technique for classifying Stack Overflow posts concerning API issues,2019,EMSE,LDA (GS),Bug handling,Localization [concerns],Developer communication,Text with a Stack Overflow post related to an issue,,,40,50/k,0.01,,,,,,,,,,,,1,,,,,,,,,,,,,,1,,,,,Approach,Structured prediction,Technique (CAPS) [combine LDA and Conditional Random Field - CRF]
"Hu, H; Wang, S; Bezemer, C; Hassan, A E",Studying the consistency of star ratings and reviews of popular free hybrid Android and iOS apps,2019,EMSE,Twitter-LDA,Maintenance,Maintenance [versions consistency],End user communication,Text with a user review,"Average of characteres for user review: iOS 155,  Android 65",Mention on results of study,10,,,i = 1000,,,,,,,,1,,,1,,,,,,,,,,,,,1,1,,,,,Exploration,,"""while hybrid apps are better at providing consistent star ratings and user reviews when compared to cross- platform apps that are built natively, hybrid apps do not guarantee such consistency. Hence, developers should not solely rely on hybrid development tools to achieve consistency in the star ratings and reviews that are given by users of their apps. In particular, developers should track closely the ratings and reviews of their apps across platforms, so that they can act accordingly when platform-specific issues arise."""
"Hindle, A; Bird, C; Zimmermann, T; Nagappan, N",Do topics make sense to managers and developers?,2015,EMSE,LDA,Bug handling,Localization [concerns],End user documentation,Text with a requirement document,"""The average document was 20 pages long with an average word count of 3,800""",Mention on study design - dataset description,20,0.1,0.1,i = 1000,,,,,,,,,,,1,,,,,,,,,,,,,,1,,,Manual,Authors' deduction based on word clusters,Exploration,,"""In summary, we investigate the high-level traceability of requirements topics and issue/bug report topics to version control commits via topic analysis and validate with the actual stakeholders the relevance of these topics extracted from requirements and issues."""
"Choetkiertikul, M; Dam, H K; Tran, T; Ghose, A",Predicting the delay of issues with due dates in software projects,2017,EMSE,LDA,Bug handling,Prediction [defects],Issue/bug report,Text with an issue description,,,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Automated Technique
"Ye, D; Xing, Z; Kapre, N",The structure and dynamics of knowledge network in domain-specific Q&A sites: a case study of stack overflow,2017,EMSE,LDA,Exploratory study,Exploring information needs in developer communication,Developer communication,Text with a Stack Overflow post (or knowledge unit),,,10,,,i = 1000,,,,,,,,,,,,,,,,,,,,1,1,,,,1,,,,,Exploration,,"""Through this study, we obtain an in-depth understanding of the knowledge diffusion process in Stack Overflow and expose the implications of URL sharing behavior for Q&A site design, developers who use crowdsourced knowledge in Stack Overflow, and future research on knowledge representation and search."""
"Bajracharya, S K; Lopes, C V",Analyzing and mining a code search engine usage log,2012,EMSE,LDA,Exploratory study,Exploring information needs in developer communication,Search query,Text with a collection of queries made by a user,,,50,0.5,0.1,,,,,,,,,1,,1,,,,,,,,,,1,,,1,,,,,Manual,Predetermined labels,Exploration,,"""presents a general categorization of these topics that provides insights on the different ways code search engine users express their queries. It identifies various forms of queries in Koders’s log and the kinds of results addressed by the queries. It also provides several suggestions for improvements in code search engines based on the analysis of usage, topics, and query forms."""
"Li, H; Chen, T H (P); Shang, W; Hassan, A E",Studying software logging using topic models,2018,EMSE,LDA (GS),Maintenance,Maintenance [system usage/behavior],Source code,Text with a method,,,50,50/k,0.01,i = 10000,,,,,,,1,,1,,1,,,,,,,,,,,1,,,1,,,Manual,Most frequent words in word clusters,Exploration,,"""n this paper, we used automatically-computed topics of a code snip- pet to approximate the functionality of a code snippet. We studied the relationship between the topics of a code snippet and the likelihood of a code snippet being logged (i.e., to con- tain a logging statement). (...) Our findings highlight that topics contain valuable information that can help guide and drive developers’ logging decisions."""
"Thomas, S W; Hemmati, H; Hassan, A E; Blostein, D",Static test case prioritization using topic models,2014,EMSE,LDA (GS),Testing,Prioritization [test cases],Source code,Text with a test case,,,"(1) 42, (2) 39, (3) 42, (4) 48, (5) 21",0.1,0.1,i = 200,,,,,,,,,,1,1,,,,,,,,,,,1,1,,1,,1,,,Approach; Comparison,,Technique
"Le, T B; Thung, F; Lo, D",Will this localization tool be effective for this bug? Mitigating the impact of unreliability of information retrieval based bug localization tools,2017,EMSE,LDA,Bug handling,Prioritization [bugs],Issue/bug report,Text with a bug report (description and summary),,,"{5, 10, 15}",,,,,,,,,,,,,1,1,,,,,,,,,,,,1,1,1,,,,,Approach,Classification; Artificial Neural Networks,Tool (APRILE)
"McIlroy, S; Ali, N; Khalid, H; Hassan, A E",Analyzing and automatically labelling the types of user issues that are raised in mobile app reviews,2016,EMSE,LLDA,Bug handling,Localization [concerns],End user communication,Text containing a user review (title and comment),"Not mentioned. ""Average of characteres for user review: iOS 155,  Android 65"" - from H34",,30,0.1,0.1,i = 1500,,1,1,,,,,,,,1,,,,,,,1,,,,,1,,,,1,Automated,Predetermined labels,Approach,,Automated Technique
"Barua, A; Thomas, S W; Hassan, A E",What are developers talking about? An analysis of topics and trends in Stack Overflow,2014,EMSE,LDA (GS),Exploratory study,Exploring information needs in developer communication,Developer communication,Text with a Stack Overflow post,"""Posts length vary between 1 and 3,844 words. The majority of the posts (99.7%) are less than 500 words""",Mention on study design - dataset description,40,50/k,0.01,i = 500,,,,,,,,,,,1,,,,,,,,,1,1,1,,,1,,,Manual,Authors' deduction based on word clusters,Exploration,,"""We analyze these discovered topics, as well as their relationships and trends over time, to gain insights into the development community. Our analysis allows us to make a number of interesting observations, including: the topics of interest to developers range widely from jobs to version control systems to C# syntax; questions in some topics lead to discussions in other topics; and the topics gaining the most popularity over time are web development (especially jQuery), mobile applications (especially Android), Git, and MySQL."""
"Nayebi, M; Cho, H; Ruhe, G",App store mining is not enough for app improvement,2018,EMSE,LDA (GS),Bug handling,Localization [concerns],End user communication,Text with a user review,"""Google play: The average length of reviews in our dataset is 97 words with the median being 92 words. Twitter: The average length of tweets in our dataset is 28 words with the median being 34 words""",Mention on study design - dataset description,"{85, 170}",,,gamma = 0.6,,,,,,1,,,,,,,,,,1,,,,,,,,,1,,,,,Exploration,,"""From this, we found that tweets provided more critical and objective views on apps than reviews from the app store. These results show that app store review mining is indeed not enough; other information sources ultimately provide added value and information for app developers."""
"Rosen, C; Shihab, E",What are mobile developers asking about? A large scale study using stack overflow,2016,EMSE,LDA (GS),Exploratory study,Exploring information needs in developer communication,Developer communication,Text containing a Stack Overflow title,,,40,50/k,0.01,"i = 10, 20, 900",,,,,,,,,,,,,,,,,,,,,,,,,,,,Manual,Authors' deduction based on word clusters,Exploration,,"""Our findings show that developers are asking about app distribution, mobile APIs, data management, sensors and context, mobile tools, and user interface development. We also determine what popular mobile-related issues are the most difficult, explore platform specific issues, and investigate the types (e.g., what, how, or why) of questions mobile developers ask."""
"Zhang, Y; Lo, D; Xia, X; Scanniello, G; Le, T B; Sun, J",Fusing multi-abstraction vector space models for concern localization,2018,EMSE,LDA-GA,Bug handling,Localization [concerns],Source code,Text with a method,,,100,50/k,0.01,i = 1000,,,,,,,,,,1,1,,,,,,,,,1,,1,1,1,1,,,,,Approach,Information extraction technique,Technique (MULAB)
"Bavota, G; Gethers, M; Oliveto, R; Poshyvanyk, D; De Lucia, A",Improving Software Modularization via Automated Analysis of Latent Topics and Dependencies,2014,TOSEM,RTM,Refactoring,Refactoring,Source code,Text of a class,,,75,0.1,1,eta = 1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Tool (Rational Refactoring via RTM - R3)
"Jiang, H; Zhang, J; Li, X; Ren, Z; Lo, D; Wu, X; Luo, Z",Recommending New Features from Mobile App Descriptions,2019,TOSEM,LDA,Requirements,Recommendation [new features],End user documentation,Text with an app description,,,60,0.1,0.1,,,,,,,,,,1,1,1,,,,,,,,,,,,,,1,,,,,Approach; Comparison,Clustering,Tool (SAFER)
"Belle, A B; Boussaidi, G E; Kpodjedo, S",Combining lexical and structural information to reconstruct software layers,2016,IST,LDA (GS),Architecting,Architecture recovery,Source code,Text with a package of keywords,,,{10-50 by 5},50/k,0.01,i = 1000,,,,,,,,1,,1,1,,,,,,,,,,,1,,,,,,,,Approach,,Technique
"Zou, J; Xu, L; Yang, M; Zhang, X; Yang, D",Towards comprehending the non-functional requirements through Developers’ eyes: An exploration of Stack Overflow using topic analysis,2017,IST,LDA (GS),Exploratory study,Exploring information needs in developer communication,Developer communication,Text with a Stack Overflow post (title and body),,,20,2.5,0.01,i = 1000,,,,,,,,1,1,,,,,,,,,,,,,,,,1,,,Manual,Predetermined labels,Exploration,,"""(1) The developers mostly discuss usability and reliability while dis- cussing less on maintainability and efficiency. (2) The most unresolved problems also occurred in us- ability and reliability. (3) The visualization of the NFR evolutions over time shows the functionality and reliability attract more and more attention from developers and usability remains hot. (4) The NFRs in- vestigation in specific technologies indicates the quality is a similar concern among different technologies and some NFRs are of more interest as time progresses. (5) The research on NFRs difficulty in specific technologies shows the maintainability is the most difficult NFR. In addition, the trends of the NFRs dif- ficulty over time in the seven categories signal that we should focus more on usability to address them."""
"Sun, X; Li, B; Leung, H; Li, B; Li, Y",MSR4SM: Using topic models to effectively mining software repositories for software maintenance tasks,2015,IST,LDA-GA,Maintenance,Maintenance [tasks],Source code and Developer communication,Text with a bug report; Text with an e-mail,,,"(1) 102, (2) 324, (3) 55, (4) 496",,,,,,,,,,,,,,,,,,,1,,,,,,1,,1,1,,1,,,Approach,,Technique (MSR4SM)
"Pettinato, M; Gil, J P; Galeas, P; Russo, B",Log mining to re-construct system behavior: An exploratory study on a large telescope system,2019,IST,LDA,Maintenance,Maintenance [system usage/behavior],Log information,Text with a group of abstract messages that correspond to an SB (Scheduling Blocks),95 messages (test data set) and 221 messages (validation data set) average,Mention on study design - dataset description,9,50/k,0.1,,,,,,,,,1,,,1,,,,,,1,,,,,,,1,1,,1,Manual,Authors' deduction based on word clusters,Approach,,Technique
"Yang, X; Lo, D; Li, L; Xia, X; Bissyandé, T F; Klein, J",Characterizing malicious Android apps by mining topic-specific data flow signatures,2017,IST,LDA-GA,Architecting,Detection of malicious behavior,End user documentation,Text with an app description,,,118,,,,,,,,,,,,1,,1,,,,,,,,,,,,1,1,1,,1,Manual,Authors' deduction based on word clusters,Approach,,Technique
"Abdellatif, T M; Capretz, L F; Ho, D",Automatic recall of software lessons learned for software project managers,2019,IST,LDA (GS); VSM; LSI,Maintenance,Maintenance [lessons learned],Issue/bug report and Lessons learned,Text with an issue description and its related lessons learned descriptions,,Mention on study design - dataset description,"{32, 64, 128, 256}",,,,,,,,,,,,,,1,,,,,,,,,,,,,,1,,,,,Comparison; Exploration,Information extraction technique,
"Lukins, S K; Kraft, N A; Etzkorn, L H",Bug localization using latent Dirichlet allocation,2010,IST,LDA (GS),Bug handling,Localization [bugs],Source code,Text with a method,,,"{50, 100, 200, 250, 500}",50/k,0.01,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,Exploration,,
"Souza, L B L; Campos, E C; Madeiral, F; Paixão, K; Rocha, A M; Maia, M A",Bootstrapping cookbooks for APIs from crowd knowledge on Stack Overflow,2019,IST,LDA (GS),Documentation,Documentation [extraction/augmenting],Developer communication,Text with a Stack Overflow post (entire question and all answers related),,,15,,,,,,,,,,,,,,1,,,,,,,,,1,1,1,,,1,,,,,Approach,,Semi-automatic Technique; Cookbook; Participants evaluation
"Cao, B; Liu, X (F); Liu, J; Tang, M",Domain-aware Mashup service clustering based on LDA topic model from multiple data sources,2017,IST,DAT-LDA (GS),Architecting,Architecture [mashup-service selection],Developer documentation,Text with a mashup service info,,,{2-39},0.01,0.01,i = 2000,,,,,,,,,,,1,,,,,,,,,,,,,,1,,,,,Approach; Comparison,Clustering,Technique
"Tantithamthavorn, C; Abebe, S L; Hassan, A E; Ihara, A; Matsumoto, K",The impact of IR-based classifier configuration on the performance and the effort of method-level bug localization,2018,IST,LDA (GS); VSM; LSI,Bug handling,Localization [bugs],Issue/bug report; Commit messages and Source code,Text with a bug report (description of a bug and affected entities); Text with several methods of a software,Bug report - 127 words (Eclipse) and 146 words (Mozilla) average; Method - 14 words (Eclipse) and 35 words (Mozilla) average ,Mention on study design - dataset description,"{32, 64, 128, 256}",,,,,,,,,,,,,1,1,,,,,,,,,,,,,,1,,,,,Comparison; Exploration,Information extraction technique,"""We find that (1) the choice of classifier configuration impacts the top-k performance from 0.44% to 36% and the required effort from 4395 to 50,000 LOC; (2) classifier configurations with similar top-k performance might require different efforts; (3) VSM achieves both the best top-k performance and the least required effort for method-level bug localization; (4) the likelihood of randomly picking a configuration that performs within 20% of the best top-k classifier configuration is on average 5.4% and that of the least effort is on average 1%; (5) configurations related to the entity representation of the analyzed data have the most impact on both the top-k performance and the required effort; and (6) the most efficient classifier configuration obtained at the method- level can also be used at the file-level (and vice versa)."""
"Yan, M; Zhang, X; Yang, D; Xu, L; Kymer, J D",A component recommender for bug reports using Discriminative Probability Latent Semantic Analysis,2016,IST,DPLSA-JS,Bug handling,Triaging/characterization [bugs],Issue/bug report,Text with a bug report,,Mention on results of study,{10-120 by 10},50/k,0.1,,,,,,1,,,,,1,1,,,,,1,,,,,,,,,1,,,Automated,Predetermined labels,Approach; Comparison,,Technique
"Ying Fu, Meng Yan, Xiaohong Zhang, Ling Xu, Dan Yang, Jeffrey D. Kymer",Automated classification of software change messages by semi-supervised Latent Dirichlet Allocation,2015,IST,Semi-supervised LDA,Bug handling,Localization [concerns],Commit messages,Text with a change message,,,3,50/k,0.01,,,,,,1,,,,,1,1,,,,,1,,,,,,,,,1,,,Automated,Predetermined labels,Approach,,Technique (Semi-supervised LDA)
"Liu, Y; Liu, L; Liu, H; Wang, X; Yang, H",Mining domain knowledge from app descriptions,2017,JSS,O-LDA,Documentation,Localization [features],End user documentation,Text with an app description,,,,,,,,,,,1,,,,,,,,,,,1,,,,,,,,,,,,,,Approach,Classification; Clustering,Technique
"Zhang, T; Chen, J; Yang, G; Lee, B; Luo, X",Towards more accurate severity prediction and fixer recommendation of software bugs,2016,JSS,LDA,Bug handling,Prediction [defects] & Bug-fix assignment,Issue/bug report,Text with a bug report,,,30,0.01,0.01,i = 1500,,,,,,,,,1,1,1,,,,,,,,,,,,,,1,,,,,Approach; Comparison,Clustering,Automatic Technique
"Catolino, G; Palomba, F; Zaidman, A; Ferrucci, F","Not all bugs are the same: Understanding, characterizing, and classifying bug types",2019,JSS,LDA-GA,Bug handling,Triaging/characterization [bugs],Issue/bug report,Text with a bug report,,,,,,,,1,1,,,,,1,,1,1,,,,,,,,,,,1,1,,1,,,,,Approach,,Automated Technique
"Sun, X; Yang, H; Xia, X; Li, B",Enhancing developer recommendation with supplementary information via mining historical commits,2017,JSS,CTM,Bug handling,Bug-fix assignment,Source code and Commit messages,Text with a source code information (classes and methods) and text with commit messages of a developer,,,,,,,,,,1,,,,,,1,1,,,,,,,,,,,,,,1,,,,,Approach,,Technique (EDR_SI)
"Chen, H; Coogle, J; Damevski, K",Modeling stack overflow tags and topics as a hierarchy of concepts,2019,JSS,LLDA; L2H,Exploratory study,Exploring information needs in developer communication,Developer communication,Text with a Stack Overflow question,50 to 400 words,Mention on study design - evaluation of technique,3,10,1000,"γ1 = 0.9, γ2 = 0.1",,,,,,,1,,,,,,,,,,,1,1,,,,,,1,,,Automated,Predetermined labels,Exploration,,"• approach for applying the L2H model to organize Stack Overflow posts and tags into a hierarchical concept model;
• evaluation of the concept models for tag synonym prediction;
• examination of the concept model for predicting the tags of an unseen post;
• novel technique for evaluating the concept hierarchy based on entropy for its potential to focus or broaden retrieved document sets; and
• evaluation of the L2H model based on the novel entropy-based metrics."
"Taba, S E S; Keivanloo, I; Zou, Y; Wang, S",An exploratory study on the usage of common interface elements in android applications,2017,JSS,LDA (GS),Coding,Reuse [user interface templates],Source code,Text with strings and labels from a UI XML layout file,,,9,50/k,0.01,i = 1000,,,,,,,,,,,,,,,,,,,,,,,,,,,,Manual,Predetermined labels,Exploration,,"""Through an empirical study on 1292 mobile applications, we observe that (i) CESs of mobile applications widely occur among and across different categories; (ii) certain characteristics of CESs can provide a high user-perceived quality; and (iii) through a manual analysis, we recommend UI templates that are extracted and summarized from CESs for developers. Developers and quality assurance personnel can use our guidelines to improve the quality of mobile applications."""
"Chen, T; Shang, W; Nagappan, M; Hassan, A E; Thomas, S W",Topic-based software defect explanation,2017,JSS,LDA (GS),Bug handling,Triaging/characterization [bugs],Source code,Text with source code (classes and methods) file of a software version,,,500,50/k,0.01,"gamma = 0.01, i = 10000",,,,,,,,,,1,1,,,,,,,,,,,,,,1,,,,,Exploration,,"""We use a statistical topic modeling approach to approximate software concerns as topics (related words in source code). We propose various metrics using these topics to help explain the file defect-proneness. Case studies on mul- tiple versions of Firefox, Eclipse, Mylyn, and NetBeans show that (i) some topics are more defect-prone than others; (ii) defect-prone topics tend to remain so over time; (iii) our topic-based metrics provide additional explanatory power for software quality over existing structural and historical metrics; and (iv) our topic-based cohesion metric outperforms state-of-the-art topic-based cohesion and coupling metrics in terms of defect explanatory power, while being simpler to implement and more intuitive to interpret."""
"Silva, L L; Valente, M T; Maia, M A",Co-change patterns: A large scale empirical study,2019,JSS,LDA (GS),Maintenance,Maintenance [system modularity],Log information,Text with a log message,,,30,50/k,0.01,,,,,,,,,1,1,,,,,,,,,,,,,,,1,1,,,,,Exploration,,"""In this study, we aim to answer two central questions: (i) Are co-change patterns detected in different programming languages? (ii) How do different co-change patterns relate to rippling, activity density, ownership, and team diversity on clusters? We conclude that Encapsulated and Well-Confined clusters (Wrapped) implement well-defined and confined concerns. Octopus clusters are proportionally numerous regarding to other patterns. They relate significantly with ripple effect, activity, ownership, and diversity in development teams. Although Crosscutting are scattered over directories, they implement well-defined concerns. Despite they present higher activity compared to Wrapped clusters, it is not necessarily easy to get rid of them, suggesting that support tools may play a crucial role."""
"Nabli, H; Djemaa, R B; Amor, I A B",Efficient cloud service discovery approach based on LDA topic modeling,2018,JSS,LDA,Architecting,Architecture [cloud service selection],URL content,Text with a URL address,,,20,0.01,0.01,,,,,,,,,1,,,1,,,,,,,,,,,,1,1,1,,,,,Approach,Web crawling,Technique
"Altarawy, D; Shahin, H; Mohammed, A; Meng, N",Lascad: Language-agnostic software categorization and similar application detection,2018,JSS,LDA,Coding,Detection of similar funcionalities,Source code,Text with several methods identifiers; Text with several comments of a source code file,,,50,,,cat _ num = 20,,,,,,,,,,1,,,,,,,,1,1,,,1,,,1,,,,,Approach,Clustering (hierarchical),Tool (LASCAD)
"Yan, M; Fu, Y; Zhang, X; Yang, D; Xu, L; Kymer, J D",Automatically classifying software changes via discriminative topic model: Supporting multi-category and cross-project,2016,JSS,DPLSA,Maintenance,Maintenance [software changes],Commit messages,Text with a change message,,,3,50/k,0.01,i = 100,,,,,1,,,,,1,1,,,,,,,,,,,,,,1,,,Automated,Predetermined labels,Approach,,Technique
"Poshyvanyk, D; Gethers, M.; Marcus, A",Concept location using formal concept analysis and information retrieval,2013,TOSEM,LSI,Documentation,Localization [features],Source code,Text with a class or method,,,"{10, 15, 20, 25}",0.05,,"number of documents = {80, 90, 100}",,,,,,,,,,1,1,,,,,,,,,,,1,,,1,,,,,Approach; Comparison,,"Technique. ""The empirical study focuses on the analysis of various configurations of the generated concept lattices and the results indicate that our approach is effective in organizing different concepts and their relationships present in the subset ofthe search results. In consequence, the proposed concept location method has been shown to outperform a standalone Information Retrieval based concept location technique by reducing the number ofirrelevant search results across all the systems and lattice configurations evaluated, potentially reducing the programmers’ effort during software maintenance tasks involving concept location."""
"Moslehi, P; Adams, B; Rilling, J",A feature location approach for mapping application features extracted from crowd-based screencasts to source code,2020,EMSE,LDA (GS),Documentation,Documentation [extraction/augmenting],Transcript text from speech and Source code,Text of several source code path files; Text containing a screencast transcript,Screencast length: 1 to 10 minutes,Mention on results of study,"{55, 80, 130}",50/k,0.01,,,,,,,,,1,,1,1,,,,,,,,,,,,1,1,1,,1,,,Approach,,Automatic Technique
"Demissie, B F; Ceccato, M; Shar, L K",Security analysis of permission re-delegation vulnerabilities in Android apps,2020,EMSE,LDA (GS),Architecting,Detection of vulnerabilities,End user documentation,Text of app descriptions,,Mention on limitations of study,30,50/k,0.01,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,Approach; Comparison,Clustering; Classification,Automated framework (Permission RE-delegation Vulnerability detection - PREV)
"Han, J; Shihab, E; Wan, Z; Deng, S; Xia, X",What do Programmers Discuss about Deep Learning Frameworks,2020,EMSE,LDA,Exploratory study,Exploring information needs in developer communication,Developer communication and Commit messages,Text containing several pull requests and Text containing several Q&A posts,,,20,0.05,0.05,,,,,,,1,,,,,,,,,,,,,,1,1,,1,1,1,1,1,,,Exploration,,
"Blasco, D; Cetina, C; Pastor, O",A fine-grained requirement traceability evolutionary algorithm: Kromaia a commercial video game case study,2020,IST,LSI,Requirements,Localization [concerns],Source code,Text containing several methods,,,,,,,,,,,,1,,,1,1,,,,,,,,,,,,1,,,1,,,,,Approach; Comparison,Evolutionary algorithm,Technique (Code Fragment-based Requirement Location - CODFREL)
"Capiluppi, A; Ruscio, D D; Rocco, J D; Nguyen, P T; Ajienka, N",Detecting Java software similarities by using different clustering techniques,2020,IST,LDA,Maintenance,Maintenance [system usage/behavior],Source code,Text with several methods,,,,,,,,,,,,1,,,,1,1,,,,,,,,1,,,1,,,1,,,,,Exploration,,
"Cui, D; Liu, T; Cai, Y; Zheng, Q; Feng, Q; Jin, W; Guo, J; Qu, Y",Investigating The Impact Of Multiple Dependency Structures On Software Defects,2019,ICSE,RTM,Architecting,Detection of dependencies,Source code; Commit messages and Issue/bug report,Text with several identifiers; Text with several commit messages,,,75,0.1,1,eta =  1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Exploration,,"""In summary, our work provides a new perspective regarding to which type(s) of relations should be used for the task of defect prediction/localization. These quantitative and qualitative results also advance our knowledge of the relationship between software quality and architectural views formed using different dependency types."""
"Chen, L; Hassan, F; Wang, X; Zhang, L",Taming Behavioral Backward Incompatibilities Via Cross-Project Testing And Analysis,2020,ICSE,LDA (GS),Coding,Detection of behavioral backward incompatibilities,Source code,Text with several classes from a project,,Mention on study design - technique description,10,5.5,0.01,"i = 10,000",,,,,,,,,,1,1,,,,,,,,,,,1,,,1,,,,,Approach,Information extraction technique,Tool (DeBBI) [combine LDA and VSM]
"Zhao, N; Chen, J; Wang, Z; Peng, X; Wang, G; Wu, Y; Zhou, F; Feng, Z; Nie, X; Zhang, W; Sui, K; Pei, D",Real-time incident prediction for online service systems,2020,ESEC FSE,LDA,Bug handling,Prediction [defects],Log information,Text with several alert content from log messages,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,1,,,,,Approach,Classification,Technique (eWarn)
"Martin, W; Sarro, F; Harman, M",Causal impact analysis for app releases in google play,2016,ESEC FSE,LDA (GS),Maintenance,Maintenance [impact of new releases],End user documentation,Text with a release description,,Mention on study design - dataset description,100,50/k,0.1,"i = 2,000",,,,,,1,,1,,,,,,,,,,,,,,,,1,1,,,,,Approach,,Tool (Causal Impact Release Analysis - CIRA)
"Zhao, Y; Zhang, F; Shihab, E; Zou, Y; Hassan, A E",How Are Discussions Associated with Bug Reworking? An Empirical Study on Open Source Projects,2016,ESEM,LDA,Bug handling,Bug re-patching,Issue/bug report,Text with several comments of a bug report,,,50,0.1,0.1,"i = 1,000",,,,,,,,1,,,1,,,,,,,,,,,,,1,1,,1,Manual,Authors' deduction based on word clusters,Exploration,,"""We find that the occurrence of bug reworking is associated with various perspectives of discussions.
Moreover, discussions on some topics (e.g., code inspection and code testing) can decrease the frequency of bug reworking."""
"Zaman, S; Adams, B; Hassan, A E",Security versus performance bugs: a case study on Firefox,2011,MSR,LDA,Bug handling,Triaging/characterization [bugs],Issue/bug report,Text with several comments of a bug report,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Exploration,,"""In this paper, we study how different types of bugs (performance and security bugs) differ from each other and from the rest of the bugs in a software project. Through a case study on the Firefox project, we find that security bugs are fixed and triaged much faster, but are reopened and tossed more frequently. Furthermore, we also find that security bugs involve more developers and impact more files in a project. Our work is the first work to ever empirically study performance bugs and compare it to frequently-studied security bugs. Our findings highlight the importance of considering the different types of bugs in software quality research and practice."""
"Ray, B; Posnett, D; Filkov, V; Devanbu, P",A large scale study of programming languages and code quality in github,2014,ESEC FSE,LDA,Coding,Exploring features affecting software quality,End user documentation,Text with several feature descriptions,,,30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Manual,Authors' deduction based on word clusters,Exploration,,"""By triangulating findings from differ- ent methods, and controlling for confounding effects such as team size, project size, and project history, we report that language de- sign does have a significant, but modest effect on software quality. Most notably, it does appear that strong typing is modestly better than weak typing, and among functional languages, static typing is also somewhat better than dynamic typing. We also find that func- tional languages are somewhat better than procedural languages. It is worth noting that these modest effects arising from language de- sign are overwhelmingly dominated by the process factors such as project size, team size, and commit size. However, we hasten to caution the reader that even these modest effects might quite possi- bly be due to other, intangible process factors, e.g., the preference of certain personality types for functional, static and strongly typed languages."""
"Shimagaki, J; Kamei, Y; Ubayashi, N; Hindle, A",Automatic topic classification of test cases using text mining at an Android smartphone vendor,2018,ESEM,LDA,Testing,Test case assingment,End user documentation,Text with a feature description,,,"{20, 50, 100, 200}","{0.1, 1.0, 10.0}",,,,,,,,,,,,1,,,,,,,,1,1,,,,,,,,1,,,Approach,Classification,Automatic Technique
"Gopalakrishnan, R; Sharma, P; Mirakhorli, M; Galster, M",Can Latent Topics In Source Code Predict Missing Architectural Tactics?,2017,ICSE,LDA,Architecting,Architecture recovery,Developer documentation,Text with a tactical description and its related contextual information,,,"{50, 100, 150, 200}",,,,,,,,,,,,,,1,,,,,,,,,,,,,,1,,,,,Approach,Classification,Technique
"Abdellatif, A; Costa, D; Badran, K; Abdalkareem, R; Shihab, E",Challenges in Chatbot Development: A Study of Stack Overflow Posts,2020,MSR,LDA (GS),Exploratory study,Exploring information needs in developer communication,Developer communication,Text with a Q&A question,,,12 {10-14 tested},50/k,0.01,,,,,,,1,1,,,,,,,,,,,,,,,,,,1,,,,,Exploration,,
"Haque, M U; Iwaya, L H; Babar, M A",Challenges in Docker Development: A Large-scale Study Using Stack Overflow,2020,ESEM,LDA (GS),Exploratory study,Exploring information needs in developer communication,Developer communication,Text with a Q&A question and their accepted answers,,,30,50/k,0.01,"i = 1,000",,,,,,,1,,,,1,,,,,,,,,,,,,,1,,,Manual,Authors' deduction based on word clusters,Exploration,,
"Gorla, A; Tavecchia, I; Gross, F; Zeller, A",Checking App Behavior Against App Descriptions,2014,ICSE,LDA (GS),Architecting,Detection of malicious behavior,End user documentation,Text with an app description,,,30,50/k,0.01,,,,,,,,,,,,1,,,1,,1,,,,,1,,1,1,1,1,1,Manual,Authors' deduction based on word clusters,Approach,Clustering,Technique (CHecking App Behavior Against Descrip- tions of Apps - CHABADA)
"Tiarks, R; Maalej, W",How does a typical tutorial for mobile development look like?,2014,MSR,LDA,Exploratory study,Exploring tutorials' structure,End user documentation,Text with several tutorials of an app,"3231 words
average",Mention on study design - dataset description,240 {50 for Android and Apple apps; 20 for Windows apps},,,,,,,,,,,,,,1,,,,,,,,,,1,,,,1,,,Manual,Authors' deduction based on word clusters,Exploration,,
"Zarif, O E; Costa, D A da; Hassan, S; Zou, Y",On the Relationship between User Churn and Software Issues,2020,MSR,LDA (GS),Exploratory study,Exploring user satisfaction,End user communication,Text containing several user reviews,,,,,,,,1,,,,1,1,,,,1,,,,,,,,,,,,,,1,,,Manual,Authors' deduction based on word clusters,Exploration,,"""Through our empirical study, we observe that (i) the intention to change software is tightly associated to the issues that are present in these software; (ii) we can predict the rate of potential churn using machine learning models; (iii) the longer the issue takes to be fixed, the higher the chances of user churn; and (iv) issues within more general software modules are more likely to be associated with user churn. Our study can provide more insights on the prioritization of issues that need to be fixed to proactively minimize the chances of user churn."""
"Gao, C; Zeng, J; Lyu, M R; King, I",Online App Review Analysis For Identifying Emerging Issues,2018,ICSE,AOLDA,Bug handling,Prediction [defects],End user communication,Text containing several user reviews,,Mention on study design - technique description,10,0.1,0.01,"w =3, λ =0.5, PMI = 5, μ =0.75",,1,,,,1,,1,,,1,,,,,1,,,1,,,,,,1,,,Automated,Predetermined labels,Approach,,Framework (IDentify Emerging App - IDEA)
"Palomba, F; Salza, P; Ciurumelea, A; Panichella, S; Gall, H; Ferrucci, F; De Lucia, A",Recommending and Localizing Change Requests For Mobile Apps Based On User Reviews,2017,ICSE,HDP,Maintenance,Maintenance [software changes],End user communication,Text containing several user reviews,,,,,,,,1,1,,,1,,,1,,1,,,1,,,1,,1,,,,,,1,,,,,Approach,,Technique (ChangeAdvisor)
"Wang, W; Malik, H; Godfrey, M W",Recommending posts concerning API issues in developer Q&A sites,2015,MSR,LDA (GS),Documentation,Documentation [extraction/augmenting],Developer communication,Text containing a Q&A post,,,40,0.01,0.01,i = 40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Approach,,Technique
"Noei, E; Costa, D A da; Zou, Y",Winning the app production rally,2018,ESEC FSE,LDA (GS),Exploratory study,Exploring user satisfaction,End user communication and End user documentation,Text containing an app description (and release notes); Text containing a user review,,,165,,,"i = 2,000",1,1,,1,1,,,,,,1,,,,,1,,,,,,,,,1,,,,,Exploration,,"""We explore 900 apps with a total of 4, 878, 011 user-reviews in 30 app development areas. We discover 13 clusters of rank trends. We observe that the majority of the subject apps (i.e., 61%) dropped in the rankings over the two years of our study. By applying a regression model, we find the variables that statistically significantly explain the rank trends, such as the number of releases. Moreover, we build a mixed effects model to study the changes in ranks across apps and various versions of each app. We find that not all the variables that common-wisdom would deem important have a significant relationship with ranks. Furthermore, app developers should not be afraid of a late entry into the market as new apps can achieve higher ranks than existing apps. Finally, we present the findings to 51 developers. According to the feedback, the findings can help app developers to achieve better ranks in Google Play Store."""
"Ali, N; Sharafi, Z; Gueheneuc, Y-G; Antoniol, G",An empirical study on the importance of source code entities for requirements traceability,2015,EMSE,LSI; LDA (GS),Requirements,Requirements recovery,Source code,Text containing several identifiers,,,50,,,,,,,,,,,1,,1,1,,,,,,,,,,,,1,1,1,,1,,,Approach,,Technique [used eye-tracking to understand developers' needs]
"Tairas, R; Gray, J",An information retrieval process to aid in the analysis of code clones,2009,EMSE,LSI,Maintenance,Detection of duplicates [code clones],Source code,Text with several classes from a directory,"All directories: 4,153 words (1,506; 1,035; 597; 670; 908)",Mention on study design - dataset description,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Exploration,,
"Mezouar, M E; Zhang, F; Zou, Y",Are tweets useful in the bug fixing process? An empirical study on Firefox and Chrome,2018,EMSE,LDA,Bug handling,Localization [concerns],Issue/bug report,Text with an issue description,,,200,,,,,,,,,,,,,,1,,,,,1,,,,,,,,,1,,,Manual,Authors' deduction based on word clusters,Approach,,"Technique: ""First, we propose an approach to map bug-reporting tweets to bug reports. Second, we identify the types of bugs that are most critical to users. We find that end-users are more concerned about how well the systems work (e.g., performance or streaming quality), rather than the appearance of the systems (e.g., resolution or text appearance). Then, we study whether developers respond faster to the bugs that are associated with tweets. We find that the tweeted bugs do not get special attention from developers, suggesting that either there is no close monitoring of bug-reporting tweets or that tweets are not considered as a useful source of information."""
"De Lucia, A; Di Penta, M; Oliveto, R; Panichella, A
Panichella, Sebastiano",Labeling source code with information retrieval methods: An empirical study,2014,EMSE,LDA (GS); VSM; LSI,Documentation,Documentation [artifacts labelling],Source code,Text with a class and its comments; Text with comments of a class,,Mention on results of study,"{number of methods, number of methods/2, 2}",0.1,0.1,,,,,,,,,,,1,1,,,,,,,,,,,1,1,,1,,,,,Comparison; Exploration,Information extraction technique,"""Results indicate that, in most cases, simpler automatic labeling techniques—based on the use of words extracted from class and method names as well as from class comments—better reflect human-based labeling. Indeed, clustering-based approaches (LSI and LDA) are more worthwhile to be used for source code artifacts having a high verbosity, as well as for artifacts requiring more effort to be manually labeled. The obtained results help to define guidelines on how to build effective automatic labeling techniques, and provide some insights on the actual usefulness of automatic labeling techniques during program comprehension tasks."""
"Thomas, S W; Nagappan, M; Blostein, D; Hassan, A E",The impact of classifier configuration and classifier combination on bug localization,2013,TSE,LDA (GS); VSM; LSI,Bug handling,Localization [bugs],Source code and Issue/bug report,Text with several bug report [titles]; Text with several bug report [descriptions]; Text with several bug report [titles and descriptions]; Text with several identifiers; Text with several comments; Text with several identifiers and related comments,,,"{32, 64, 128, 256}",50/k,0.01,,,,,,,,,,,1,1,,,,,,,,,,,1,,1,1,,,,,Approach; Comparison,Information extraction technique; Classification,Framework
"Fowkes, J; Chanthirasegaran, P; Ranca, R; Allamanis, M; Lapata, M; Sutton, C",Autofolding for source code summarization,2016,ICSE,TopicSum,Coding,Code summary,Source code,Text with several classes from a software,,,,,,,,,,,,,,1,1,1,,,,,,,,,,,,1,,,,,,,,Approach; Comparison,Information extraction technique,Tool (TASSAL)
"Binkley, D; Lawrie, D; Uehlinger, C; Heinz, D.",Enabling improved IR-based feature location,2015,JSS,VSM; LSI; VSM-WS; QL-lin; QL-Dir; QL-LDA,Documentation,Localization [features],Source code,Text with a method,,,"{200, 100, 1,000, 400, 1,000}","{50/k, 1.0}","{0.01, 0.1}","(QL-Dir, QL-Lin) λ = 0.5, μ = 1,000 (QL-LDA) λ = 0.6, |S| = 3, μ = 0.5 OR α = 50/k and β = 0.01 OR α = 1.0 and β = 0.1; i = 1,000. k = {200; 100; 1,000; 400; 1,000}",,,,,,,,,,1,1,,,,,,,,,,,1,,,1,,,,,Comparison; Exploration,Information extraction technique,"""Results find that models based on query-likelihood perform about twice as well as models in common use in software engineering such as LSI and thus deserve greater attention. Furthermore, corpus preprocessing has a significant impact as the top performing setting is over 100% better than the average."""
"Biggers, L R; Bocovich, C; Capshaw, R; Eddy, B P; Etzkorn, L H; Kraft, N A",Configuring latent Dirichlet allocation based feature location,2014,EMSE,LDA (GS),Documentation,Localization [features],Source code,Text with a method,,,"{300, 400, 500}",1,"{0.5, 0.25, 0.1}",,,,,,,,,1,1,1,,,,,,,1,,,,,1,,,1,,,,,Comparison; Exploration ,,"""1. Set K = 300 for small systems, set K = 400 for small–medium systems, and set large systems is based on prior experience with Eclipse andMozilla (Lukins et al. K = 500 for medium–large and large systems. Our recommendation regarding 2008, 2010). 2. Set α = 1.0 for all systems. 3. Set β for each system based on the value of K.Set β = 0.5 for small systems, and for larger systems, set β to be inversely proportional to K. For example, set β = 0.25 for small–medium systems, and set β = 0.1 for medium–large and large systems."" (...) ""Finally, we offer specific recommendations for configuring an LDA based FLT. Our recommendations are based on the results of the case study and on prior experience (Lukins et al. 2008, 2010)."""
"Hu, H; Bezemer, C P; Hassan, A E",Studying the consistency of star ratings and the complaints in 1 & 2-star user reviews for top free cross-platform Android and iOS apps,2018,EMSE,Twitter-LDA,Exploratory study,Exploring user satisfaction,End user communication,Text with a user review,,Mention on results of study,10,,,"i = 1,000",,,,,,,,1,,,1,,,,,,,,,,,,,1,1,,,,,Exploration,,"""Our findings show that cross-platform apps are far from achieving consistent star ratings
and user reviews across platforms. Consistency in star ratings and user reviews is far more complex than delivering the same high quality top apps. Developers must be aware that users of different platforms have different priorities and expectations. Hence, the main implication of our results is that while developers are treating cross-platform apps as separate projects already in many cases, as shown in Joorabchi et al.’s study (Joorabchi et al. 2013), they should consider adjusting development priorities and requirements to the differing desires of the users of each platform for which their app is available."""
"Hindle, A; Alipour, A; Stroulia, E",A contextual approach towards more accurate duplicate bug report detection and ranking,2016,EMSE,LDA; LLDA,Bug handling,Detection of duplicates [bugs],Issue/bug report,Text with an issue report,,Mention on study design - evaluation of technique,20,0.1,0.1,,,,,,,,,,1,,,,,,,,,,,,,,,,1,,,Mixed,Predetermined labels,Approach,,Technique
"Luo, Q; Moran, K; Poshyvanyk, D",A large-scale empirical comparison of static and dynamic test case prioritization techniques,2016,ESEC FSE,LDA,Testing,Prioritization [test cases],Source code,Text with a test case,,,,,,,,,,,,,,,,1,1,,,,,,,,,,,,,,1,,,,,Comparison; Exploration,Tools for TCP (call-graph-based; string-distance-based; greedy techniques; adaptative random testing; search-based techniques),"""In this work, we perform an extensive study empirically comparing the effectiveness, efficiency, and similarity of detected faults for static and dynamic TCP techniques on 30 real Java programs. The experiments were conducted at both test-method and test-class levels to understand the impact of different test granularities on the effectiveness of TCP techniques. The results indicate that the studied static techniques tend to outperform the studied dynamic techniques at the test-class level, whereas dynamic techniques tend to outperform the static techniques at test-method level. Additionally, we found that the faults uncovered by static and dynamic techniques for the highest prioritized test cases uncover mostly dissimilar faults, which suggests several promising avenues for future work. Finally, we found evidence suggesting that different TCP techniques tend to perform differently on different subject programs, which suggests that certain program characteristics may be important when considering which type of TCP technique to use."""
"Noei, E; Heydarnoori, A",EXAF: A search engine for sample applications of object-oriented framework-provided concepts,2016,IST,LSI,Documentation,Localization [features],Developer communication,Text with several Q&A posts (question and answers),,,300,,,similarity threshold = 0.7,,,,,,,,,,,,,,,,,,,,,,,,,1,1,,,,Approach,,Framework (EXample Applications Finder - EXAF)
"Pérez, F; Lapeña, R; Font, J; Cetina, C",Fragment retrieval on models for model maintenance: Applying a multi-objective perspective to an industrial case study,2018,IST,LSI,Documentation,Documentation [traceability to source code],Issue/bug report; End user documentation and Developer documentation,Text with several feature descriptions; Text with several requirements; Text with several bug reports,,,300,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,Approach,Multi-Objective Evolutionary Algorithms,Technique (Fragment Retrieval on Models - FROM)
"Rosenberg, C M; Moonen, L",Improving problem identification via automated log clustering using dimensionality reduction,2018,ESEM,LSI; Principal Component Analysis (PCA); Non-Negative Matrix Factorization (NMF) [dimensionality reduction techniques],Maintenance,Maintenance [continuous deployment],Log information,Text with several log messages,,,,,,similarity threshold = 0.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Comparison; Exploration,Information extraction technique,"Our study shows that (1) identifying problems in con- tinuous deployment logs via clustering is feasible, (2) including NMF significantly improves overall accuracy and robustness, and (3) Complete Linkage performs best of all merge criteria analyzed."
"Rao, S; Kak, A",Retrieval from software libraries for bug localization: a comparative study of generic and composite text models,2011,MSR,MLE-LDA; LDA; UM; VSM; LSA; CBDM,Bug handling,Localization [bugs],Source code and Issue/bug report,Text with several classes,,,"LDA, MLE: 150; CBDM: {100, 250, 500, 1,000}","LDA, MLE: {0.000667, 0.006667, 0.033333, 0.333333}","LDA, MLE: 0.01","UM: λ = 0.5; CBDM: λ1 = {0.25, 0.15, 0.81, 0.27, 0.495, 0.05}, λ2 = {0.25, 0.35, 0.09, 0.63, 0.495, 0.05}, λ3 = {0.5, 0.5, 0.1, 0.1, 0.01, 0.99}",,,,,,,,,,1,,,,,,,,,,,,1,,,,,,,,Comparison; Exploration,Information extraction technique; Clustering,"IR based bug localization techniques are at least as effective as the static and the dynamic bug localization tools developed in the past.
Sophisticated models like LDA, LSA, and CBDM do not outperform simpler models like Unigram or VSM for IR based bug localization for large software systems. An analysis of the spread of the word distributions over the source files with the help of measures such as tf and idf can give useful insights into the usability of topic and cluster based models for bug localization."
"Silva, B; Sant’Anna, C; Rocha, N; Chavez, C",The effect of automatic concern mapping strategies on conceptual cohesion measurement,2016,IST,LDA,Bug handling,Localization [concerns],Source code,Text with several classes,,,Rhino: 40; jEdit: 69,Rhino: 2.5; jEdit: 1.4,0.1,threshold = 0.1,,,,,,,,,,1,1,,,,,,,,,,,,,,1,,,,,Comparison; Exploration,Xscan [tool]: Static dependency analysis and Textual analysis of code similarities.,"Conceptual cohesion measurements over the two analyzed mapping strategies performed weakly in the ability of selecting the least cohesive modules. We then provide a discussion to explain the reasons. Concern mapping strategies should be carefully chosen for conceptual cohesion measurement, specially if automatic mapping is under consideration. Manual mapping is still the most reliable way for computing conceptual cohesion. We pointed out limitations in automatic mapping strategies that go beyond conceptual cohesion measurement purposes and which should be considered in future research or applications in industry."
"Liu, Y; Lin, J; Cleland-Huang, J",Traceability Support for Multi-Lingual Software Projects,2020,MSR,"LDA; GVSM (CLG, WEG and WEGtr); LSI",Documentation,Documentation [traceability to source code],Commit messages and Issue/bug report,Text with a commit message; Text with an issue description,,,,,,,,,,,1,,,,1,,,,,,,,,,,,,,,,,,,,,Comparison; Exploration,Deep-learning technique (Generative Vector Space Model); Information extraction technique,"""This paper has made several contributions. First, it explored the use of intermingled Chinese and English terms across 14 different projects and identified common usage patterns. It then showed that using a preprocessing translation step in IBA projects in conjunction with three commonly used trace models improved accuracy of the generated trace links. This clearly indicates that the multi-lingual problem must be addressed for traceability in IBA datasets. We then proposed three GVSM based methods which leveraged the strength of word embedding to address the IBA vocabulary issue. Our experiment results showed that, WEG∗tr can outperform NMT combined classic trace models and two other GVSM based methods proposed by us. In the cases where NMT may not be available (due to costs of an external service provider), we propose CLG and WEG as viable alternatives, because it is easier, more effective, and less costly to train a word embedding based model than an NMT translator. Furthermore, an internally trained CLG and WEG model could potentially include domain-specific terminology, thereby potentially boosting its performance."""
"Poshyvanyk, D; Marcus, A; Ferenc, R; Gyimothy, T",Using information retrieval based coupling measures for impact analysis,2009,EMSE,LSI,Architecting,Detection of dependencies,Source code and Issue/bug report,Text with a method,,,500,,,,,,,,,,,,,1,,,,,,,,,,,,1,1,,,,1,,,Exploration,,"""The paper defines a novel set of operational measures for the conceptual coupling of classes, based on IR, which are theoretically valid and empirically studied. These new metrics capture new dimensions in coupling measurement, compared to existing structural metrics. Moreover, one ofthe conceptual coupling measures, CCBCm measure, appears to be a superior indicator of change ripple effects as compared to existing structural coupling measures and can be effectively used to rank classes in the course of impact analysis in a large OO system."""
"Revelle, M; Gethers, M; Poshyvanyk, D",Using structural and textual information to capture feature coupling in object-oriented software,2011,EMSE,LSI,Architecting,Detection of dependencies,Source code,Text with a method,,,,,,,,,,,,,,,,1,,,,,,,,,,,,1,,,1,,,,,Approach,,Feature Location And Textual Tracing Tool (FLAT)
,,,,,,,,,,,,,,,2,7,3,3,7,11,6,20,16,33,61,1,1,2,1,11,4,8,8,9,9,23,19,21,75,5,17,,,,,
